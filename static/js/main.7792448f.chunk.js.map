{"version":3,"sources":["components/LocationList.js","components/Item.js","components/ItemList.js","components/App.js","reportWebVitals.js","index.js"],"names":["LocationList","props","header","displayContents","useState","region","setRegion","checkAvailability","location","Checked","availability","undefined","RequiredItemIds","ConditionalItemIds","every","id","items","find","element","ItemId","Acquired","some","conditionals","areas","map","currentRegion","key","onClick","Name","locations","LocationIdInOrder","forEach","push","LocationId","className","onMouseDown","e","setLocationChecked","LocationName","getRegionLocations","Item","click","setItemAcquired","item","button","ItemName","String","ItemList","acquired","App","itemFile","setItems","locationFile","setLocations","onContextMenu","preventDefault","checked","event","updatedLocations","updatedItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7792448f.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport areas from '../util/areas.json';\r\n\r\nimport '../styles/Location.css'\r\n\r\nfunction LocationList(props) {\r\n\r\n    const [region, setRegion] = useState(null);\r\n\r\n    const getOverworldLocations = () => {\r\n        return areas.map((currentRegion, key) => \r\n            <tr key = {key} onClick = {() => setRegion(key)}>\r\n                <td>\r\n                    {currentRegion.Name}\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    const getRegionLocations = () => {\r\n        let locations = [];\r\n\r\n        areas[region].LocationIdInOrder.forEach(id => {\r\n            locations.push(props.locations.find(element => id === element.LocationId))\r\n        });\r\n\r\n        return locations.map((location, key) => \r\n        <tr className=\"location\" key={key} onMouseDown={(location, e) => props.setLocationChecked(location, e)}>\r\n            <td className={checkAvailability(location)}>\r\n                {location.LocationName}\r\n            </td>\r\n        </tr>\r\n        );\r\n    }\r\n\r\n    const checkAvailability = (location) => {\r\n        if(location.Checked) {\r\n            return \"completed\";\r\n        }\r\n\r\n        let availability = location.RequiredItemIds[0] === undefined && location.ConditionalItemIds[0] === undefined;\r\n\r\n        if(!availability) {\r\n            availability = location.RequiredItemIds.every(id => props.items.find(element => id === element.ItemId).Acquired);\r\n\r\n            availability = location.ConditionalItemIds.some(conditionals => \r\n                conditionals.every(id => props.items.find(element => id === element.ItemId).Acquired));            \r\n        }\r\n\r\n        return (availability) ? \"available\" : \"unavailable\"\r\n    }\r\n\r\n\r\n    let header;\r\n    let displayContents;\r\n    if(region === null) {\r\n        displayContents = getOverworldLocations();\r\n        header = \"Termina\";\r\n    }\r\n    else {\r\n        displayContents = getRegionLocations();\r\n        header = areas[region].Name;\r\n    }\r\n\r\n    return (\r\n        <div className=\"locationList\">\r\n            <div className=\"tableHeader\">\r\n                {header}\r\n            </div>\r\n\r\n            <div className=\"tableBody\">\r\n                <table>\r\n                    <tbody>\r\n                        {region !== null &&\r\n                            <tr className=\"non_location\" onClick = {() => setRegion(null)}>\r\n                                <td>Termina</td>\r\n                            </tr>\r\n                        }\r\n                        \r\n                        {displayContents}\r\n                    </tbody>\r\n                    \r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationList;","import React, {useState} from 'react';\r\n\r\nfunction Item(props) {\r\n    \r\n    const handleClickEvent = (click) => {\r\n        props.setItemAcquired(props.item.ItemId, click.button === 0)\r\n    }\r\n\r\n    return (\r\n        <p onMouseDown={handleClickEvent}>\r\n            {props.item.ItemName} - {String(props.item.Acquired)}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Item;","import React, {useState} from 'react';\r\nimport Item from './Item';\r\n\r\nfunction ItemList(props) {\r\n    const generateItems = () => {\r\n        const items = props.items;\r\n\r\n        return items.map((item, key) => \r\n            <ul key={key}>\r\n                <Item item={item} key={key} setItemAcquired={(id, acquired) => props.setItemAcquired(id, acquired)}/>\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            {generateItems()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList;","// imports\r\nimport React, {useState} from 'react';\r\nimport LocationList from './LocationList.js';\r\nimport ItemList from './ItemList';\r\n\r\n// json files\r\nimport locationFile from '../util/locations.json';\r\nimport itemFile from \"../util/items.json\";\r\n\r\n// styles\r\nimport '../styles/App.css';\r\n\r\nfunction App() {\r\n    const [items, setItems] = useState(itemFile);\r\n\r\n    const [locations, setLocations] = useState(locationFile);\r\n\r\n    const setItemAcquired = (id, acquired) => {\r\n        let updatedItems = [...items];\r\n        updatedItems.find(item => id === item.ItemId).Acquired = acquired;\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    const setLocationChecked = (id, event) => {\r\n        let updatedLocations = [...locations];\r\n        updatedLocations[id].Checked = event.button === 1\r\n        setLocations(updatedLocations);\r\n    }\r\n\r\n    return (\r\n        <div onContextMenu={(e) => e.preventDefault()}>\r\n            <div className=\"locationTable\">\r\n                <LocationList locations={locations} items={items} setLocationChecked={(id, checked) => setLocationChecked(id, checked)}/>\r\n            </div>\r\n            <div className=\"itemTable\">\r\n                <ItemList items={items} setItemAcquired={(id, acquired) => setItemAcquired(id, acquired)}/>\r\n            </div> \r\n        </div>\r\n\r\n      );\r\n}\r\n\r\nexport default App; ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}